C51 COMPILER V9.00   12864                                                                 01/21/2011 08:29:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\temp\12864.obj
COMPILER INVOKED BY: G:\Keil 4 C51\C51\BIN\C51.exe src\12864.c BROWSE INCDIR(.\inc;.\inc\xlib;.\inc\kernel) DEBUG OBJECT
                    -EXTEND PRINT(.\temp\12864.lst) OBJECT(.\temp\12864.obj)

line level    source

   1          /*****************************************************************************
   2           /12864液晶驱动程序,
   3           /
   4           /*****************************************************************************/
   5          #include "12864.h"
   6          #include "xos.h"
   7          #define C_BUSY_TIME 50
   8          /*****************位定义*************************/
   9          /*******************************************/
  10          static void write_data(unsigned char dc, unsigned char dat); //写数据或命令
  11          static unsigned char read_data(unsigned char b); //读数据或命令
  12          static unsigned char chk_busy(); //检查忙状态
  13          void init_12864(); //初始化12864LCD
  14          void cls(); //全屏清屏
  15          void print(unsigned int x, unsigned int y, unsigned char *chi, unsigned char n); //写汉字或字符
*** WARNING C235 IN LINE 15 OF SRC\12864.C: parameter 1: different types
*** WARNING C235 IN LINE 15 OF SRC\12864.C: parameter 2: different types
*** WARNING C235 IN LINE 15 OF SRC\12864.C: parameter 3: different types
*** WARNING C235 IN LINE 15 OF SRC\12864.C: parameter 4: different types
  16          //void printsnake(unsigned int x,unit y,unsigned char color);           //蛇身结点显示
  17          /*******************************************/
  18          
  19          /********************纳秒**************************       
  20           void delay(unsigned int n)
  21           {
  22           int s;
  23           for(;n>0;n--)
  24           for(s=124;s>0;s--);
  25           }
  26           /*********************忙状态检测***************************/
  27          static unsigned char chk_busy() {
  28   1              unsigned char  busy;
  29   1              unsigned char k;
  30   1              en = 0;
  31   1              for (k = 0; k < 2; k++) {
  32   2                      rs = 0;
  33   2                      rw = 1;
  34   2                      en = 1;    
  35   2                      data0 = 0xff;
  36   2                      busy = (data0 & 0x80);
  37   2                      en = 0;
  38   2              }
  39   1              return busy;
  40   1      }
  41          /********************写数据或指令(dc==1为数据)*********************/
  42          static void write_data(unsigned char dc, unsigned char dat) {
  43   1              //while(chk_busy()){;}
  44   1              /**/
  45   1              unsigned int i = C_BUSY_TIME;
  46   1              while ((i-- == 0) && chk_busy())
  47   1                      ;
  48   1              /**/
  49   1              rs = dc;
  50   1              rw = 0;
C51 COMPILER V9.00   12864                                                                 01/21/2011 08:29:47 PAGE 2   

  51   1              en = 1;
  52   1              _nop_();
  53   1              data0 = dat;
  54   1              en = 0;
  55   1      }
  56          /*******************读数据.状态.1为数据**************************************/
  57          static unsigned char read_data(unsigned char b) {
  58   1              unsigned char da;
  59   1              unsigned int i = C_BUSY_TIME;
  60   1              while ((i-- == 0) && chk_busy())
  61   1                      ;
  62   1              rs = b;
  63   1              rw = 1;
  64   1              en = 1;
  65   1              data0 = 0xff;
  66   1              da = P0;
  67   1              en = 0;
  68   1              return da;
  69   1      }
  70          /********************初始化LCD***************************************/
  71          void init_12864() {
  72   1              PSB = 1;
  73   1              RST = 1;
  74   1              sleep(HZ / 25);
  75   1              EA = 0;
  76   1              write_data(0, 0x30); //基本指令
  77   1              _nop_();
  78   1              write_data(0, 0x0c); //开显示
  79   1              _nop_();
  80   1              write_data(0, 0x01); //清屏
  81   1              _nop_();
  82   1              write_data(0, 0x06); //光标的移动方向
  83   1              EA = 1;
  84   1      }
  85          
  86          //清屏,全部为空
  87          /*********************************************************
  88           void cls()
  89           {
  90           unsigned char data i,j;
  91           for(i=0;i<32;i++)
  92           {
  93           for(j=0;j<8;j++)
  94           {
  95           write_data(0,0x34);            //设置扩展功能指令,且为关绘画
  96           write_data(0,0x80+i);          //写Y地址
  97           write_data(0,0x80+j);          //写X地址
  98           write_data(0,0x30);            //设置基本功能指令
  99           write_data(1,0x00);     //连续写入两个8位数据.
 100           write_data(1,0x00);
 101           }
 102           }
 103           for(i=0;i<32;i++)
 104           {
 105           for(j=0;j<8;j++)
 106           {
 107           write_data(0,0x34);
 108           write_data(0,0x80+i);
 109           write_data(0,0x88+j);
 110           write_data(0,0x30);
 111           write_data(1,0x00);
 112           write_data(1,0x00);
C51 COMPILER V9.00   12864                                                                 01/21/2011 08:29:47 PAGE 3   

 113           }
 114           }
 115           write_data(0,0x36);
 116           }
 117           /****************在X,Y处显示一个(16*16)汉字****************/
 118          /*                              0<=x<8,0<=y<4                                           *******/
 119          void print(unsigned char x, unsigned char y, unsigned char n, unsigned char *chi) {
 120   1              INTO_IRQ();
 121   1              switch (y) {
 122   2              case 0:
 123   2                      y = 0x80;
 124   2                      break;
 125   2              case 1:
 126   2                      y = 0x90;
 127   2                      break;
 128   2              case 2:
 129   2                      y = 0x88;
 130   2                      break;
 131   2              case 3:
 132   2                      y = 0x98;
 133   2                      break;
 134   2              }
 135   1              y += x; //计算要显示的液晶坐标
 136   1              write_data(0, 0x30);
 137   1              write_data(0, y);
 138   1              if (n == 0)
 139   1                      n = 16;
 140   1              y = 0;
 141   1              while (chi[y] != '\0' && n--) {
 142   2                      write_data(1, chi[y]);
 143   2                      y++;
 144   2              }
 145   1              QUIT_IRQ();
 146   1      }
 147          
 148          void reverse(unsigned char line) {
 149   1              INTO_IRQ();
 150   1              write_data(CMD, 0x34);
 151   1              write_data(CMD, 4 + line);
 152   1              write_data(CMD, 0x30);
 153   1              QUIT_IRQ();
 154   1      }
 155          
 156          void clear_12864() {
 157   1              INTO_IRQ();
 158   1              write_data(0, 0x01); //清屏
 159   1              QUIT_IRQ();
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
